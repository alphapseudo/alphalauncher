// Generated by AlphaLauncher on {{ datetime }}
// Manual changes here will be overwritten by the launcher
// See https://community.bistudio.com/wiki/server.cfg

// GLOBAL SETTINGS
hostname = "{{ default hostname "Arma 3 Server" }}";
password = "{{ password }}";
passwordAdmin = "{{ passwordAdmin }}";
serverCommandPassword = "{{ serverCommandPassword }}";
{{#if loopback~}}
  loopback = {{ boolToInt loopback }};
{{/if}}
{{#if upnp~}}
  upnp = {{ boolToInt upnp }};
{{/if}}

logFile = "{{ logfile }}";

{{#if motd.length}}
motd[] = {
{{#each motd}}
  "{{ this }}"{{#unless @last}},{{/unless}}
{{/each}}
};
{{else}}
motd[] = {};
{{/if}}

motdInterval = {{ motdInterval }};

{{#if admins.length~}}

// ADMINISTRATORS
admins[] = {
  {{~#each admins~}}
    "{{ this }}"{{#unless @last}},{{/unless}}
  {{~/each~}}
};

{{/if~}}

{{#if headlessClients.length~}}

// HEADLESS CLIENTS
headlessClients[] = {
  {{~#each headlessClients~}}
    "{{ this }}"{{#unless @last}},{{/unless}}
  {{~/each~}}
};

{{/if~}}

{{#if localClient.length~}}

// LOCAL CLIENTS
localClient[] = {
  {{~#each localClient~}}
    "{{ this }}"{{#unless @last}},{{/unless}}
  {{~/each~}}
};

{{/if~}}

// JOINING RULES
maxPlayers = {{ maxPlayers }};
kickDuplicate = {{ boolToInt kickDuplicate }};
verifySignatures = {{ verifySignatures }};
allowedFilePatching = {{ allowedFilePatching }};
{{#if requiredBuild.enabled~}}
  requiredBuild = {{ requiredBuild.value }};
{{/if}}

// VOTING
voteMissionPlayers = {{ voteMissionPlayers }};
voteThreshold = {{ voteThreshold }};

// INGAME SETTINGS
disableVoN = {{ boolToInt disableVoN }};
vonCodec = {{ vonCodec }};
vonCodecQuality = {{ vonCodecQuality }};
persistent = {{ boolToInt persistent }};
timeStampFormat = "{{ timestamp }}";
BattlEye = {{ boolToInt battlEye }};
{{#if disconnectTimeout.enabled~}}
  disconnectTimeout = {{ disconnectTimeout.value }};
{{/if}}
{{#if maxPing.enabled~}}
  maxPing = {{ maxPing.value }};
{{/if}}
{{#if maxDesync.enabled~}}
  maxDesync = {{ maxDesync.value }};
{{/if}}
{{#if maxPacketLoss.enabled~}}
  maxPacketLoss = {{ maxPacketLoss.value }};
{{/if}}

// SCRIPTING ISSUES
onUserConnected = "{{ onUserConnected }}";
onUserDisconnected = "{{ onUserDisconnected }}";
doubleIdDetected = "{{ doubleIdDetected }}";
regularCheck = "{{ regularCheck }}";

// SIGNATURE VERIFICATION
onUnsignedData = "{{ onUnsignedData }}";
onHackedData = "{{ onHackedData }}";
onDifferentData = "{{ onDifferentData }}";

// MISCELLANEOUS
drawingInMap = {{ boolToInt drawingInMap }};
forceRotorLibSimulation = {{ forceRotorLibSimulation }};

// MISSION ROTATION
class Missions { {{~#enabledEach missions}}
  class Mission{{ increment this.index }} {
    template = "{{ this.name }}.{{ this.level }}";
    difficulty = "{{ this.difficulty }}";
  };
{{/enabledEach~}} };
